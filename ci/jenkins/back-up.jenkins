#!groovy
properties([disableConcurrentBuilds()])

pipeline {
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("test") {
            steps {
                echo " ============== start building image =================="
                def output = sh returnStdout: true, script: 'ls -l'
                echo " ============== start building image =================="
                sh "ls -l > commandResult"
                result = readFile('commandResult').trim()
            }
        }
        stage("create back_up") {
            steps {
                echo " ============== start building image =================="
                sh '''
                docker exec -i --privileged bot bash
                whoami > commandResult
                ls -a > commandResult
                tar -cvf backup.tar ./attachments
                tar -rvf backup.tar dump.sql
                gzip backup.tar
                rm dump.sql
                exit
                docker cp bot:/usr/src/app/backup.tar.gz c:\temp
                '''
                result = readFile('commandResult').trim()
            }
        }
    }
}
